openapi: "3.0.0"
info:
  version: 1.0.0
  title: eventsvxo
  description: |
    Different methods for the eventsvxo API
servers:
- url: http://localhost:2000
paths:
  /events:
    get:
      summary: Lists all events
      tags:
      - events
      parameters:
        - name: category
          in: query
          description: filter by category
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Array of events
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ResponseEvents"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new event
      tags:
      - events
      requestBody:
        description: The event to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Events"
      responses:
        '201':
          description: The created Event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEvent"
        default:
          description: Unexpected Error
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /events/{eventId}:
    get:
      summary: Get a specific event
      tags:
      - events
      parameters: 
      - name: eventId
        in: path
        description: event by id
        required: true
        schema: 
          type: string
      responses:
        '200':
          description: the event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEvent"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Replace a specific event
      tags:
      - events
      parameters:
      - name: eventId
        in: path
        description: event by id
        required: true
        schema:
          type: string
      requestBody:
        description: The event to replace
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Events"
      responses:
        '200':
          description: The replaced event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEvent"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete an event
      tags:
      - events
      parameters:
      - name: eventId
        in: path
        description: delete event by id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Event deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEvent"
        '204':
          description: Nothing was deleted (No change)
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Events:
      type: object
      properties:
        _id: 
          type: string
          format: uuid
        title: 
          type: string
        start_date:
          properties:
            year:
              type: number
            month:
              type: number
            day:
              type: number
            time:
              type: string
        end_date: 
          properties:
            year:
              type: number
            month:
              type: number
            day:
              type: number
            time:
              type: string
        location: 
          type: string
        price:
          type: string
        category: 
          type: string
        tags:
          type: string
        additional_info:
          type: string
        host: 
          type: string
        img:
          type: string

    ResponseEvent:
      allOf:
      - $ref: "#/components/schemas/Events"
      - properties:
          _id:
            type: string
            format: uuid
    ResponseEvents:
      type: array
      items:
        $ref: "#/components/schemas/ResponseEvent"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
              
              
              